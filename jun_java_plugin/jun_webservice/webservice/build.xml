<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="all" name="ixwebservice">
	<property name="ixwebservice.src.dir" value="${basedir}/src/java" />
	<property name="ixwebservice.plugins.src.dir" value="${basedir}/src/plugins" />
	<property name="build.classes.dir" value="${basedir}/build/classes" />
	<property name="build.classes.plugins.dir" value="${build.classes.dir}/plugins" />
	<property name="WebContent.dir" value="${basedir}/WebContent" />
	<property name="WebContent.plugins.dir" value="${WebContent.dir}/plugins" />
	<property name="WebContent.webinf.dir" value="${WebContent.dir}/WEB-INF" />
	<property name="WebContent.webinf.lib.dir" value="${WebContent.webinf.dir}/lib" />
	<property name="WebContent.webinf.classes.dir" value="${WebContent.webinf.dir}/classes" />
	<property name="WebServer.lib.dir" value="D:\j2EEServer\apache-tomcat-7.0.4\lib" />
	<property name="svn.dir" value=".svn" />

	<!--准备classpath环境 -->
	<path id="classpath">
		<fileset dir="${WebContent.webinf.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${WebServer.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="plugins_classpath">
		<path refid="classpath" />
		<pathelement location="${build.classes.dir}" />
	</path>

	<!--清理编译及发布环境 -->
	<target name="clean">
		<delete dir="${build.classes.dir}" />
		<delete dir="${WebContent.plugins.dir}" />
		<delete dir="${WebContent.webinf.classes.dir}" />
	</target>

	<!--初始化工作，比如生成中间目录等 -->
	<target name="init" depends="clean">
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${WebContent.plugins.dir}" />
		<mkdir dir="${WebContent.webinf.classes.dir}" />
	</target>

	<!-- 编译WebService源代码 -->
	<target name="compile" depends="init">
		<!-- 复制除JAVA文件之外的所有文件 -->
		<copy todir="${build.classes.dir}">
			<fileset dir="${ixwebservice.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac encoding="UTF-8" srcdir="${ixwebservice.src.dir}" destdir="${build.classes.dir}" classpathref="classpath">
		</javac>
	</target>

	<!-- 配置Ant Contrib -->
	<taskdef id="antcontribref" resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${WebContent.webinf.lib.dir}/ant-contrib.jar" />
		</classpath>
	</taskdef>
	<taskdef name="subdirinfo" classname="org.jivesoftware.ant.SubDirInfoTask">
		<classpath>
			<pathelement location="${WebContent.webinf.lib.dir}/ant-subdirtask.jar" />
		</classpath>
	</taskdef>

	<macrodef name="buildplugin">
		<attribute name="plugin" />
		<attribute name="pluginsrc" />
		<sequential>
			<trycatch property="message_ref" reference="exception_ref">
				<try>
					<mkdir dir="${build.classes.dir}/plugins/@{plugin}" />
					<mkdir dir="${build.classes.dir}/plugins/@{plugin}/classes" />
					<mkdir dir="${build.classes.dir}/plugins/@{plugin}/lib" />

					<!--复制除JAVA文件之外的所有文件, 也就是plugin.xml之类的文件 -->
					<copy todir="${build.classes.dir}/plugins/@{plugin}">
						<fileset dir="@{pluginsrc}/@{plugin}/src">
							<include name="**/*.*" />
							<exclude name="**/*.java" />
						</fileset>
					</copy>

					<copy todir="${build.classes.dir}/plugins/@{plugin}/lib">
						<fileset dir="@{pluginsrc}/@{plugin}/lib">
							<include name="**/*.jar" />
						</fileset>
					</copy>

					<javac encoding="UTF-8" srcdir="@{pluginsrc}/@{plugin}/src" destdir="${build.classes.dir}/plugins/@{plugin}/classes">
						<classpath>
							<path refid="plugins_classpath" />
							<fileset dir="@{pluginsrc}/@{plugin}" includes="lib/*.jar" />
						</classpath>
					</javac>

					<!-- 把插件打包 -->
					<jar destfile="${WebContent.plugins.dir}/@{plugin}.jar">
						<fileset dir="${build.classes.dir}/plugins/@{plugin}" />
					</jar>
				</try>
				<catch>
					<property name="exception" refid="exception_ref" />
					<property name="message" value="Error building plugin: @{plugin}. Exception:${line.separator}${exception}" />
					<echo message="${message}" />
					<fail if="halt.on.plugin.error" message="${message}" />
				</catch>
			</trycatch>
		</sequential>
	</macrodef>

	<target name="plugins" depends="compile">
		<!-- 取得子目录列表 -->
		<subdirinfo dir="${ixwebservice.plugins.src.dir}" property="dirlist" except="${svn.dir}" />

		<for list="${dirlist}" param="plugin" trim="true">
			<sequential>
				<buildplugin plugin="@{plugin}" pluginsrc="${ixwebservice.plugins.src.dir}" />
			</sequential>
		</for>
	</target>

	<target name="all" depends="plugins">
		<delete dir="${build.classes.plugins.dir}" />
		<copy todir="${WebContent.webinf.classes.dir}">
			<fileset dir="${build.classes.dir}">
				<exclude name="plugins" />
			</fileset>
		</copy>

		<delete file="${basedir}/ixwebservice.war" />
		<war destfile="${basedir}/ixwebservice.war">
			<fileset dir="${WebContent.dir}" />
		</war>
		<delete dir="${build.classes.dir}" />
	</target>

</project>
